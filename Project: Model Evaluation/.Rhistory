knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rpart)
library(rpart.plot)
library(magrittr)
```{r}
d <- read_csv("adviseinvest_clean.csv")  %>%
select(-answered) %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
View(d)
tree_model <- rpart(purchased ~ ., data=d)
# Confusion matrix
table(predicted = predict(tree_model, type="class"),
observed=d$purchased)
# Fit tree model to for purchased
tree_model <- rpart(purchased ~ ., data=d)
# Confusion matrix
table(predicted = predict(tree_model, type="class"),
observed=d$purchased)
# Accuracy
sum(d$purchased == predict(tree_model, type="class")) / nrow(d)
sum(predict(tree_model, type="class") == 'yes')
sum(predict(tree_model, type="class") == 'yes') / nrow(d)
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
select(probability)
table(count(probability_list))
probability_list <- d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
select(probability)
table(count(probability_list))
count(probability_list)
count(probability_list, probability)
count(probability_list, probability) %>%
arrange(desc(probability))
# Find a list of probability
probability_list <- d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
select(probability)
count(probability_list, probability) %>%
arrange(desc(probability))
```{r}
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchase == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit") +
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchase == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit")
d$purchased
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchased == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit")
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchased == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit") +
theme_minimal()
# Return an object with the probability of purchasing for each customer in data set
probability_list <- d %>%
mutate(probability = predict(tree_model, type="prob")[,2]) %>%
select(probability)
# Count each unique probability value, find count at highest value
count(probability_list, probability) %>%
arrange(desc(probability))
# Return an object with the probability of purchasing for each customer in data set
probability_list <- d %>%
mutate(probability = predict(tree_model, type="prob")[,2]) %>%
select(probability)
# Count each unique probability value, find count at highest value
count(probability_list, probability) %>%
arrange(desc(probability))
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,1]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchased == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit") +
theme_minimal()
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,2]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchased == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit Curve for Sales Reps") +
xlab("Proportion of customers targeted (decreasing by score)") +
ylab("Profit") +
theme_minimal()
# Define revenue and cost
revenue <- 100
cost <- 25
# Make plot
d %>%
mutate(probability = predict(tree_model, type="prob")[,2]) %>%
arrange(desc(probability)) %>%
mutate(profit = ifelse(purchased == "yes", revenue - cost, -cost),
cum_profit = cumsum(profit),
customers = 1:n() / n()) %>%
ggplot(aes(customers, cum_profit)) +
geom_line() +
ggtitle("Profit curve for tree classifier of purchase in AdviseInvest case") +
xlab("proportion of customers (decreasing by score)") +
ylab("cumulative profit") +
theme_minimal()
#
d_ans <- read_csv("adviseinvest_clean.csv")  %>%
select(-purchase) %>%
select(-product) %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
#
d_ans <- read_csv("adviseinvest_clean.csv")  %>%
select(-purchased) %>%
select(-product) %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
#
d_ans <- read_csv("adviseinvest_clean.csv")  %>%
select(-product) %>%
mutate(female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
glimpse(d_ans)
#
d_ans <- read_csv("adviseinvest_clean.csv")  %>%
select(-product) %>%
mutate(answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
purchase_model <- rpart(purchased ~ ., data=d)
answer_model <- rpart(answered ~ ., data=d_ans)
eb
```{r}
# Estimate benefit - probability of purchasing, given calling * profit of purchasing minus cost, plus probability of not purchasing given calling * profit of not purchasing minus cost
prob_purchasing <- sum(predict(tree_model, type="class") == 'yes') / nrow(d)
prob_not_purchasing <- 1-prob_purchasing
profit_purchasing <- revenue-cost
profit_not_purchasing <- -cost
eb <- prob_purchasing*profit_purchasing + prob_not_purchasing*profit_not_purchasing
eb
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
d_full %>%
mutate(p=predict(tree_model type="prob")[,2]) %>%
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_point()
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile))
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
tree_model$variable.importance
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(chk_acct, p)) +
geom_jitter()+
labs(title="p(purchase) ~ number of checking accounts")
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet_grid(chk_acct) +
labs(title="p(purchase) ~ answer, varying by number of checking accounts")
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet_grid(chk_acct~income) +
labs(title="p(purchase) ~ answer, varying by number of checking accounts")
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet(chk_acct) +
labs(title="p(purchase) ~ answer, varying by number of checking accounts")
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet_wrap(chk_acct) +
labs(title="p(purchase) ~ answer, varying by number of checking accounts")
summarize(d_full)
# create new object, including answered variable
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# is there people in the purchase predict that are predicted to not answer?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
labs(title="p(purchase) ~ answer")
# is there a category which
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet_wrap(chk_acct) +
labs(title="p(purchase) ~ answer, varying by number of checking accounts")
# create new object with all data
d_full <- read_csv("adviseinvest_clean.csv")  %>%
mutate(purchased = factor(ifelse(product==0, "no","yes")),
answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# create new object, including answered variable
d_ans <- read_csv("adviseinvest_clean.csv")  %>%
mutate(answered = factor(ifelse(answered==0, "no","yes")),
female = factor(female),
job = factor(job),
rent = factor(rent),
own_res = factor(own_res),
new_car = factor(new_car),
mobile = factor(mobile)) %>%
select(-product)
# create answer model for sales
answer_model <- rpart(answered ~ ., data=d_ans)
# is there a distinction for those who answer, varing by checking account?
d_full %>%
mutate(p=predict(tree_model, type="prob")[,2]) %>%
ggplot(aes(answered, p)) +
geom_jitter()+
facet_wrap(~chk_acct) +
labs(title="Probability of purchasing, given answering and number of checking accounts", x="Call Answered", y="Probability of Purchasing")
